setwd("E:/Work/OneDrive - UW-Madison/WISC/STAT 628/628module3/analysis-on-yelp-reviews/code")
data=read.csv('../data/attributes_data_for_ttest.csv')
library(dplyr)
data2=data %>%
group_by(restaurant,stars) %>%
summarise(n=n()) %>%
select(restaurant,stars)
View(data2)
hist(data2$stars,main = 'Steak restaurant stars histgram',xlab = Stars,freq = T)
hist(data2$stars,main = 'Steak restaurant stars histgram',xlab = 'Stars',freq = T)
hist(data2$stars,main = 'Steak restaurant stars histgram',breaks=c(0:5),freq = F,xaxt = "n",xlab = 'Stars',ylab = 'Freq',ylim = c(0,0.6))
View(data)
data3=data %>%
filter(attribute=='RestaurantsReservations')
View(data3)
table(data3$level)
source('E:/Work/OneDrive - UW-Madison/WISC/STAT 628/628module3/analysis-on-yelp-reviews/code/creating_dataset_for_ttest.R', echo=TRUE)
data=read.csv('../data/attributes_data_for_ttest.csv')
data3=data %>%
filter(attribute=='RestaurantsReservations')
#RestaurantsReservations
data3=data %>%
filter(attribute=='RestaurantsReservations') %>%
filter(!level='None')
#RestaurantsReservations
data3=data %>%
filter(attribute=='RestaurantsReservations') %>%
filter(!level=='None')
table(data3$level)
sd(data3$stars[data3$level=='True'])
sd(data3$stars[data3$level=='False'])
t <- subset(data3, level == "True")
f <- subset(data3, level != "False")
t <- subset(data3$stars, level == "True")
f <- subset(data3$stars, level != "False")
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE)
t <- subset(data3, level == "True")
f <- subset(data3, level == "False")
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = FALSE)
t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')
data3=data %>%
filter(attribute=='NoiseLevel')
table(data3$level)
t <- subset(data3, grepl('quiet',level))
t <- subset(data3, grepl('quiet',level))
f <- subset(data3, !grepl('quiet',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
#RestaurantsAttire
data3=data %>%
filter(attribute=='RestaurantsAttire') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, !grepl('casual',level))
f <- subset(data3, grepl('casual',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
data3=data %>%
filter(attribute=='WiFi')
table(data3$level)
t <- subset(data3, grepl('free',level))
f <- subset(data3, !grepl('free',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
data3=data %>%
filter(attribute=='OutdoorSeating')
##OutdoorSeating
data3=data %>%
filter(attribute=='OutdoorSeating') %>%
#  filter(!level=='None')
table(data3$level)
##OutdoorSeating
data3=data %>%
filter(attribute=='OutdoorSeating') %>%
#  filter(!level=='None')
table(data3$level)
data3=data %>%
filter(attribute=='OutdoorSeating')
##OutdoorSeating
data3=data %>%
filter(attribute=='OutdoorSeating') %>%
#  filter(!level=='None')
table(data3$level)
##OutdoorSeating
data3=data %>%
filter(attribute=='OutdoorSeating') #%>%
table(data3$level)
t <- subset(data3, grepl('True',level))
f <- subset(data3, !grepl('True',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
##Restaurants Delivery
data3=data %>%
filter(attribute=='RestaurantsDelivery') #%>%
table(data3$level)
##Restaurants Delivery
data3=data %>%
filter(attribute=='RestaurantsDelivery') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, grepl('True',level))
f <- subset(data3, !grepl('True',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
t.test(f$stars, t$stars, var.equal = TRUE,alternative = 'greater')
##RestaurantsReservations
data3=data %>%
filter(attribute=='RestaurantsReservations') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, level == "True")
f <- subset(data3, level == "False")
var.test(t$stars, f$stars)
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')
ls
ls()
rm(ls())
rm
rm()
p1=t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')$p-value
p1=t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')$pvalue
p1=t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')
p1=t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')$p.value
p=c(p1)
#check overall steak stars
rm(list = ls())
library(dplyr)
data=read.csv('../data/attributes_data_for_ttest.csv')
data2=data %>%
group_by(restaurant,stars) %>%
summarise(n=n()) %>%
select(restaurant,stars)
hist(data2$stars,main = 'Steak restaurant stars histgram',breaks=c(0:5),freq = F,xaxt = "n",xlab = 'Stars',ylab = 'Freq',ylim = c(0,0.6))
####conduct t-test
p=c()
##RestaurantsReservations
data3=data %>%
filter(attribute=='RestaurantsReservations') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, level == "True")
f <- subset(data3, level == "False")
var.test(t$stars, f$stars)
p1=t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')$p.value
t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')$p.value
t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')
p=c(p,t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')$p.value)
##NoiseLevel
data3=data %>%
filter(attribute=='NoiseLevel') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, grepl('quiet',level))
f <- subset(data3, !grepl('quiet',level))
var.test(t$stars, f$stars)
p=c(p,t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')$p.value)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
##RestaurantsAttire
data3=data %>%
filter(attribute=='RestaurantsAttire') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, !grepl('casual',level))
f <- subset(data3, grepl('casual',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')$p.value)
##WiFi
data3=data %>%
filter(attribute=='WiFi') %>%
#  filter(!level=='None')
table(data3$level)
##WiFi
data3=data %>%
filter(attribute=='WiFi') #%>%
table(data3$level)
t <- subset(data3, grepl('free',level))
f <- subset(data3, !grepl('free',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')$p.value)
##OutdoorSeating
data3=data %>%
filter(attribute=='OutdoorSeating') #%>%
table(data3$level)
t <- subset(data3, grepl('True',level))
f <- subset(data3, !grepl('True',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')$p.value)
##Restaurants Delivery
data3=data %>%
filter(attribute=='RestaurantsDelivery') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, grepl('True',level))
f <- subset(data3, !grepl('True',level))
var.test(t$stars, f$stars)
t.test(f$stars, t$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(f$stars, t$stars, var.equal = TRUE,alternative = 'greater')$p.value)
p
RestaurantsReservations
table(data$attribute)
data3=data %>%
filter(attribute=='RestaurantsGoodForGroups')
table(data3$level)
t <- subset(data3, grepl('True',level))
f <- subset(data3, !grepl('True',level))
var.test(t$stars, f$stars)
t.test(f$stars, t$stars, var.equal = TRUE,alternative = 'greater')
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
table(data$attribute)
colnames(table(data$attribute))
names(table(data$attribute))
"RestaurantsReservations","NoiseLevel","RestaurantsAttire","WiFi","OutdoorSeating","RestaurantsDelivery","RestaurantsGoodForGroups",
p=c(p,t.test(f$stars, t$stars, var.equal = TRUE,alternative = 'greater')$p.value)
attribute=c("RestaurantsReservations","NoiseLevel","RestaurantsAttire","WiFi","OutdoorSeating","RestaurantsDelivery","RestaurantsGoodForGroups")
pvalue_ttest=data.frame(attribute,p.value=p)
View(pvalue_ttest)
format(x, scientific = FALSE)
format(p, scientific = FALSE)
#not significant
p=format(p, scientific = FALSE)
attribute=c("RestaurantsReservations","NoiseLevel","RestaurantsAttire","WiFi","OutdoorSeating","RestaurantsDelivery","RestaurantsGoodForGroups")
pvalue_ttest=data.frame(attribute,p.value=p)
knitr::opts_chunk$set(echo = TRUE)
####check overall steak stars
rm(list = ls())
library(dplyr)
data=read.csv('../data/attributes_data_for_ttest.csv')
data2=data %>%
group_by(restaurant,stars) %>%
summarise(n=n()) %>%
select(restaurant,stars)
hist(data2$stars,main = 'Steak restaurant stars histgram',breaks=c(0:5),freq = F,xaxt = "n",xlab = 'Stars',ylab = 'Freq',ylim = c(0,0.6))
####check overall steak stars
rm(list = ls())
library(dplyr)
data=read.csv('../data/attributes_data_for_ttest.csv')
data2=data %>%
group_by(restaurant,stars) %>%
summarise(n=n()) %>%
select(restaurant,stars)
hist(data2$stars,main = 'Steak restaurant stars histgram',breaks=c(0:5),freq = F,xaxt = "n",xlab = 'Stars',ylab = 'Freq',ylim = c(0,0.6))
####check overall steak stars
rm(list = ls())
library(dplyr)
data=read.csv('../data/attributes_data_for_ttest.csv')
data2=data %>%
group_by(restaurant,stars) %>%
summarise(n=n()) %>%
select(restaurant,stars)
hist(data2$stars,main = 'Steak restaurant stars histgram',breaks=c(0:5),freq = F,xaxt = "n",xlab = 'Stars',ylab = 'Freq',ylim = c(0,0.6))
####conduct t-test
p=c()
##RestaurantsReservations
data3=data %>%
filter(attribute=='RestaurantsReservations') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, level == "True")
f <- subset(data3, level == "False")
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')
p=c(p,t.test(t$stars, f$stars, var.equal = FALSE,alternative = 'greater')$p.value)
#significant
##NoiseLevel
data3=data %>%
filter(attribute=='NoiseLevel') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, grepl('quiet',level))
f <- subset(data3, !grepl('quiet',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')$p.value)
#not significant
##RestaurantsAttire
data3=data %>%
filter(attribute=='RestaurantsAttire') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, !grepl('casual',level))
f <- subset(data3, grepl('casual',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')$p.value)
#significant
##WiFi
data3=data %>%
filter(attribute=='WiFi') #%>%
#  filter(!level=='None')
table(data3$level)
t <- subset(data3, grepl('free',level))
f <- subset(data3, !grepl('free',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')$p.value)
#not significant
##OutdoorSeating
data3=data %>%
filter(attribute=='OutdoorSeating') #%>%
#  filter(!level=='None')
table(data3$level)
t <- subset(data3, grepl('True',level))
f <- subset(data3, !grepl('True',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')$p.value)
#significant
##RestaurantsDelivery
data3=data %>%
filter(attribute=='RestaurantsDelivery') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, grepl('True',level))
f <- subset(data3, !grepl('True',level))
var.test(t$stars, f$stars)
t.test(f$stars, t$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(f$stars, t$stars, var.equal = TRUE,alternative = 'greater')$p.value)
# significant
##RestaurantsGoodForGroups
data3=data %>%
filter(attribute=='RestaurantsGoodForGroups') %>%
filter(!level=='None')
table(data3$level)
t <- subset(data3, grepl('True',level))
f <- subset(data3, !grepl('True',level))
var.test(t$stars, f$stars)
t.test(t$stars, f$stars, var.equal = TRUE,alternative = 'greater')
p=c(p,t.test(f$stars, t$stars, var.equal = TRUE,alternative = 'greater')$p.value)
#not significant
p=format(p, scientific = FALSE)
attribute=c("RestaurantsReservations","NoiseLevel","RestaurantsAttire","WiFi","OutdoorSeating","RestaurantsDelivery","RestaurantsGoodForGroups")
pvalue_ttest=data.frame(attribute,p.value=p)
pvalue_ttest
####check overall steak stars
rm(list = ls())
library(dplyr)
data=read.csv('../data/attributes_data_for_ttest.csv')
data2=data %>%
group_by(restaurant,stars) %>%
summarise(n=n()) %>%
select(restaurant,stars)
hist(data2$stars,main = 'Steak restaurant stars histgram',breaks=c(0:5),freq = F,xaxt = "n",xlab = 'Stars',ylab = 'Freq',ylim = c(0,0.6))
library(knitr)
pvalue_ttest
##NoiseLevel
data3=data %>%
filter(attribute=='NoiseLevel') %>%
filter(!level=='None')
table(data3$level)
